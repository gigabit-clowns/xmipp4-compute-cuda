name: Deploy release

on:
  release:
    types: 
      - published
  workflow_dispatch:

  pull_request:

jobs:
  build_wheel_linux_x86_64:
    name: Build wheels for linux-x86_64 cuda-${{ matrix.cuda-version }}
    strategy:
      matrix:
        cuda-version: 
        - "11.4.3"
        - "11.8.0"
        - "12.1.0"

    runs-on: ubuntu-latest
    container:
      image: nvidia/cuda:${{ matrix.cuda-version }}-devel-ubuntu20.04
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
      
      - name: Install Python
        run: |
          apt-get update && apt-get install -y python3 python3-pip
          python3 -m pip install --upgrade pip

      - name: Install cibuildwheel
        run: pip install cibuildwheel

      - name: Build wheels
        run: python3 -m cibuildwheel --output-dir wheelhouse
        env:
          CIBW_ARCHS: "x86_64"
          CIBW_ENVIRONMENT: "CUDA_HOME=/usr/local/cuda"
          CIBW_BUILD: "cp313-*" # Python agnostic, pick any version
          CIBW_BUILD_VERBOSITY: 1
          CIBW_BEFORE_BUILD: | # TODO remove when xmipp4-core is available in PyPI
            pip install git+https://github.com/gigabit-clowns/xmipp4-core@main
          CIBW_REPAIR_WHEEL_COMMAND: "" # TODO remove when xmipp4-core is available in PyPI
      
      - name: Upload wheels
        uses: actions/upload-artifact@v4
        with:
          name: cibw-wheels-linux-x86_64-cuda-${{ matrix.cuda-version }}
          path: ./wheelhouse/*.whl

  build_sdist:
    name: Build source distribution
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4

      - name: Build sdist
        run: pipx run build --sdist

      - uses: actions/upload-artifact@v4
        with:
          name: cibw-sdist
          path: dist/*.tar.gz

  upload_pypi:
    name: Upload to PyPI
    needs: [build_sdist]
    runs-on: ubuntu-latest
    steps:
      - uses: actions/download-artifact@v4
        with:
          pattern: cibw-*
          path: dist
          merge-multiple: true

      - name: List artifacts
        run: ls -l ./dist

      - name: Upload to PyPI
        if: false && github.event_name == 'release' && github.event.action == 'published'
        uses: pypa/gh-action-pypi-publish@release/v1 # TODO enable this in the future
