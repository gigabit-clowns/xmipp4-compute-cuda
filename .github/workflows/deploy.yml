name: Deploy release

on:
  release:
    types: 
      - published
  workflow_dispatch:

  pull_request:

jobs:
  build_wheel_linux_x86_64:
    name: Build wheels for linux-x86_64 ${{ matrix.name }}
    strategy:
      matrix:
        include:
        - name: "cu114"
          cuda-toolkit-package-suffix: "11-4"
          cuda-architectures: "35;50;61;70;75;80;86;89"
        - name: "cu118"
          cuda-toolkit-package-suffix: "11-8"
          cuda-architectures: "35;50;61;70;75;80;86;89"
        - name: "cu121"
          cuda-toolkit-package-suffix: "12-1"
          cuda-architectures: "50;61;70;75;80;86;89"

    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
      
      - name: Build wheels
        uses: pypa/cibuildwheel@v2.23.2
        env:
          CIBW_ARCHS: "x86_64"
          CIBW_BUILD: "cp313-*" # Python agnostic, pick any version
          CIBW_BUILD_VERBOSITY: 1
          CIBW_ENVIRONMENT: |
            CUDACXX=/usr/local/cuda/bin/nvcc
            CUDAARCHS="${{ matrix.cuda-architectures }}"
          CIBW_BEFORE_ALL: | # Based on: https://stackoverflow.com/a/77212119
            yum install -y wget
            wget https://developer.download.nvidia.com/compute/cuda/repos/rhel8/x86_64/cuda-rhel8.repo -O /etc/yum.repos.d/cuda.repo
            yum clean all
            yum -y install cuda-toolkit-${{ matrix.cuda-toolkit-package-suffix }}
          CIBW_BEFORE_BUILD: | # TODO remove last line when xmipp4-core is available in PyPI
            pip install git+https://github.com/gigabit-clowns/xmipp4-core@main
          CIBW_REPAIR_WHEEL_COMMAND: "" # TODO remove when xmipp4-core is available in PyPI
      
      - name: Upload wheels
        uses: actions/upload-artifact@v4
        with:
          name: cibw-wheels-linux-x86_64-${{ matrix.name }}
          path: ./wheelhouse/*.whl

  build_sdist:
    name: Build source distribution
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4

      - name: Build sdist
        run: pipx run build --sdist

      - uses: actions/upload-artifact@v4
        with:
          name: cibw-sdist
          path: dist/*.tar.gz

  upload_pypi:
    name: Upload to PyPI
    needs: [build_sdist, build_wheel_linux_x86_64]
    runs-on: ubuntu-latest
    steps:
      - uses: actions/download-artifact@v4
        with:
          pattern: cibw-*
          path: dist
          merge-multiple: true

      - name: List artifacts
        run: ls -l ./dist

      - name: Upload to PyPI
        if: false && github.event_name == 'release' && github.event.action == 'published'
        uses: pypa/gh-action-pypi-publish@release/v1 # TODO enable this in the future
