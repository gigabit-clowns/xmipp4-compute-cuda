name: Build and Test

on:
  pull_request:
    branches:
      - main

  workflow_dispatch:

env:
  BUILD_TYPE: Release

jobs:
  build:
    strategy:
      matrix:
        os:
        - ubuntu-latest
        compiler: 
        - {cc: gcc, cxx: g++}
        - {cc: clang, cxx: clang++}
        cuda:
        - '11.8.0'
        - '12.2.2'
        
        include:
        - os: windows-latest
          compiler: {cc: cl, cxx: cl}
          cuda: '11.8.0'
        - os: windows-latest
          compiler: {cc: cl, cxx: cl}
          cuda: '12.2.2'
  
    runs-on: ${{ matrix.os }}
    defaults:
      run:
        shell: bash -el {0}
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - uses: Jimver/cuda-toolkit@v0.2.19
        id: cuda-toolkit
        with:
          cuda: ${{ matrix.cuda }}
          method: 'network'
          #sub-packages: '["nvcc"]'
          #non-cuda-sub-packages: '["libcublas", "libcufft", "libcusolver"]'

      - name: Install xmipp4-core
        id: install-xmipp4-core
        uses: ./.github/composites/install-xmipp4-core
      
      - name: Configure with CMake
        run: |
          cmake -S "${{ github.workspace }}" -B "${{ github.workspace }}/build"
          --config ${{ env.BUILD_TYPE }}
          -DCMAKE_C_COMPILER=${{ matrix.compiler.c }}
          -DCMAKE_CXX_COMPILER=${{ matrix.compiler.cxx }}
          -DCMAKE_BUILD_TYPE=${{ env.BUILD_TYPE }}
          -Dxmipp4-core_ROOT="${{ steps.install-xmipp4-core.outputs.xmipp4-core-root }}"

      - name: Build with CMake
        run: |
          cmake --build "${{ github.workspace }}/build" --config ${{ env.BUILD_TYPE }}

      - name: Run tests
        working-directory: "${{ github.workspace }}/build"
        run: ctest -C ${{ env.BUILD_TYPE }} -T test --rerun-failed --output-on-failure
