name: Build and Test

on:
  pull_request:
    branches:
      - main

  workflow_dispatch:

env:
  BUILD_TYPE: Release

jobs:
  build:
    strategy:
      matrix:
        os:
        - ubuntu-latest
        compiler: 
        - {cc: gcc, cxx: g++}
        - {cc: clang, cxx: clang++}
        cuda:
        - '11.8.0'
        - '12.2.2'
        
        include:
        - os: windows-latest
          compiler: {cc: cl, cxx: cl}
          cuda: '11.8.0'
        - os: windows-latest
          compiler: {cc: cl, cxx: cl}
          cuda: '12.2.2'
  
    runs-on: ${{ matrix.os }}
    defaults:
      run:
        shell: bash -el {0}
    steps:
      - name: Checkout repository
        uses: actions/checkout@main

      - uses: Jimver/cuda-toolkit@master
        id: cuda-toolkit
        with:
          cuda: ${{ matrix.cuda }}
          method: 'network'
          sub-packages: '["nvcc"]'
          non-cuda-sub-packages: '["libcublas", "libcufft", "libcusolver"]'

      - name: Install xmipp4-core
        id: install-xmipp4-core
        uses: ./.github/composites/install-xmipp4-core
      
      - name: Test print path
        run: echo "${{ steps.cuda-toolkit.outputs.CUDA_PATH }}"
      
      - name: Configure and build with CMake
        uses: threeal/cmake-action@main
        with:
          source-dir: ${{ github.workspace }}
          build-dir: "${{ github.workspace }}/build"
          c-compiler: ${{ matrix.compiler.cc }}
          cxx-compiler: ${{ matrix.compiler.cxx }}
          options: |
            CMAKE_BUILD_TYPE=${{ env.BUILD_TYPE }}
            xmipp4-core_ROOT=${{ steps.install-xmipp4-core.outputs.xmipp4-core-root }}
            CUDA_TOOLKIT_ROOT_DIR="'${{ steps.cuda-toolkit.outputs.CUDA_PATH }}'"
          run-build: true
          build-args: --config ${{ env.BUILD_TYPE }}

      #- name: Run tests
      #  working-directory: "${{ github.workspace }}/build"
      #  run: ctest -C ${{ env.BUILD_TYPE }} -T test --rerun-failed --output-on-failure
